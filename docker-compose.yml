version: '3.9'
services:

  #ApiGateway
  gateway:
    container_name: nf-api-gateway-service
    image: nf-api-gateway-service:0.0.1
    build:
      context: gateway_api
      dockerfile: DockerfileCopyJar
    ports:
      - 8080:8080
    environment:
      - SERVER_PORT=8080
      - CUSTOMERS_HOST=nf-customers-service
      - CUSTOMERS_PORT=8092
      - ORDERS_HOST=nf-orders-service
      - ORDERS_PORT=8081
    command: [ 'java', '-jar', '/app.jar' ]

  #Customers
  customers:
    container_name: nf-customers-service
    image: nf-customers-service:0.0.1
    build:
      context: customer_service
      dockerfile: DockerfileCopyJar
    depends_on:
      - postgres-customers
    ports:
      - 8092:8092
    environment:
      - POSTGRES_URL=jdbc:postgresql://nf-pg-customers-db:5432/postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - SERVER_PORT=8092
    command: [ 'java', '-jar', '/app.jar' ]

  #Orders
  orders:
    container_name: nf-orders-service
    image: nf-orders-service:0.0.1
    build:
      context: orders-service
      dockerfile: DockerfileCopyJar
    depends_on:
      - kafka
      - postgres-orders
      - redis
    ports:
    - 8081:8081
    environment:
      - SERVER_PORT=8081
      - POSTGRES_URL=jdbc:postgresql://nf-pg-orders-db:5432/postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - KAFKA_HOST_NAME=nf-kafka:9092
      - REDIS_HOST=nf-redis
      - REDIS_PORT=6379

  #Processor
  processor:
    container_name: nf-processor-service
    image: nf-processor-service:0.0.1
    build:
      context: processor-service
      dockerfile: DockerfileCopyJar
    depends_on:
      - kafka
    environment:
      - KAFKA_HOST_NAME=nf-kafka:9092

  #Kafka
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: nf-zookeeper
    expose:
      - 2181

  kafka:
    image: wurstmeister/kafka
    container_name: nf-kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=nf-kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPIC=orders
    restart: unless-stopped

  #Redis
  redis:
    container_name: nf-redis
    image: redis:alpine
    ports:
      - 6379:6379

  #Orders DataBase
  postgres-orders:
    container_name: nf-pg-orders-db
    image: postgres:alpine3.14
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    restart: unless-stopped
    volumes:
      - pg-customers-data:/var/lib/postgresql/data/

  #Customers DataBase
  postgres-customers:
    container_name: nf-pg-customers-db
    image: postgres:alpine3.14
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    restart: unless-stopped
    volumes:
      - pg-orders-data:/var/lib/postgresql/data/

volumes:
  pg-orders-data:
  pg-customers-data:
