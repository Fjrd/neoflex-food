server:
  port: 8081

spring:
  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5433/postgres}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}

  jpa:
    show-sql: true
    properties:
      hibernate.format_sql: true
    hibernate:
      ddl-auto: validate

  liquibase:
    enabled: true
    change-log: db/changelog/db.changelog-master.xml
    #REMOVE ME
    drop-first: true

  application:
    name: auth2

  redis:
    host: ${REDIS_HOST:nf-redis}
    port: ${REDIS_PORT:6379}

  kafka:
    producer:
      bootstrap-servers: ${KAFKA_HOST_NAME:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    consumer:
      bootstrap-servers: ${KAFKA_HOST_NAME:localhost:9092}
      group-id: orders
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
